["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$sin-wave.components.ui","~:imports",null,"~:requires",["^ ","~$component","~$com.stuartsierra.component","^:","^:","~$sin-wave.core","^;"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$render","^;"],"~:defs",["^ ","~$UIComponent",["^ ","~:num-fields",0,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$com.stuartsierra.component/Lifecycle","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","~$sin-wave.components.ui/UIComponent","~:file","src/cljs/sin_wave/components/ui.cljs","~:end-column",23,"~:type",true,"~:column",12,"~:internal-ctor",true,"~:line",5,"~:record",true,"~:end-line",5,"~:tag","~$function","~:skip-protocol-flag",["^4",["^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^Q","^R"]]],"~$->UIComponent",["^ ","~:protocol-inline",null,"~:meta",["^ ","^T","/home/altrunox/Documents/clojure/ClojureReactiveProgramming/sin-wave/src/cljs/sin_wave/components/ui.cljs","^U",23,"^W",12,"^X",true,"~:factory","~:positional","^Y",5,"^[",5,"~:arglists",["~#list",["~$quote",["^19",[[]]]]],"~:doc","Positional factory function for sin-wave.components.ui/UIComponent."],"^5","~$sin-wave.components.ui/->UIComponent","^T","src/cljs/sin_wave/components/ui.cljs","^U",23,"~:method-params",["^19",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^19",[null,null]],"^W",1,"^X",true,"~:variadic?",false,"^16","^17","^Y",5,"~:ret-tag","^S","^[",5,"~:max-fixed-arity",0,"~:fn-var",true,"^18",["^19",["^1:",["^19",[[]]]]],"^1;","Positional factory function for sin-wave.components.ui/UIComponent."],"~$map->UIComponent",["^ ","^14",null,"^15",["^ ","^T","/home/altrunox/Documents/clojure/ClojureReactiveProgramming/sin-wave/src/cljs/sin_wave/components/ui.cljs","^U",23,"^W",12,"^X",true,"^16","~:map","^Y",5,"^[",5,"^18",["^19",["^1:",["^19",[["~$G__41696"]]]]],"^1;","Factory function for sin-wave.components.ui/UIComponent, taking a map of keywords to field values."],"^5","~$sin-wave.components.ui/map->UIComponent","^T","src/cljs/sin_wave/components/ui.cljs","^U",23,"^1=",["^19",[["^1F"]]],"^1>",null,"^1?",["^19",[null,null]],"^W",1,"^X",true,"^1@",false,"^16","^1E","^Y",5,"^1A","^S","^[",5,"^1B",1,"^1C",true,"^18",["^19",["^1:",["^19",[["^1F"]]]]],"^1;","Factory function for sin-wave.components.ui/UIComponent, taking a map of keywords to field values."],"~$new-ui-component",["^ ","^14",null,"^15",["^ ","^T","/home/altrunox/Documents/clojure/ClojureReactiveProgramming/sin-wave/src/cljs/sin_wave/components/ui.cljs","^Y",13,"^W",7,"^[",13,"^U",23,"^18",["^19",["^1:",["^19",[[]]]]]],"^5","~$sin-wave.components.ui/new-ui-component","^T","src/cljs/sin_wave/components/ui.cljs","^U",23,"^1=",["^19",[[]]],"^1>",null,"^1?",["^19",[null,null]],"^W",1,"^1@",false,"^Y",13,"^1A","^S","^[",13,"^1B",0,"^1C",true,"^18",["^19",["^1:",["^19",[[]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^1;",null]